When would you want to use a remote repository rather than keeping all your work local?

When I want to work with a wider team, or have backups for my repository
available other than my local machines.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

I might have changes in my branch that I want to work on or keep before I pull
the latest changes that were committed to the remote repository. Also, doing
a pull will overwrite the changes in my branch.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

A fork is used for when you want to make a public (or private) repository
hosted on GitHub copied from another existing repository. You would want to use
this when you plan on building on an existing project, and making that project
have its own repository on GitHub, while also attributing credit to the
original project. Clones are used when you want to make a local copy of
a repository hosted on a remote site, such as GitHub. You can clone both an
original project or a fork. You would want to use this when you want to copy
a project to do some further local development work on it, or if you intend to
reuse that project in a larger project you are working on. You would want to
use a branch anytime you want to make a change or test a new experimental
feature from the cloned or local repository, and either merge the changes from
that branch to the master or discard them if you don't need them in the future.

What is the benefit of having a copy of the last known state of the remote stored locally?

The benefit of having a copy of the last known state of the remote stored
locally is that as the remote gets updated by collaborators on a project, I can
update my local copy by running 'git fetch' and compare that to the branch that
I'm working on to see what's changing, and pick and choose when I'm ready to
merge the latest updated remote with my branch, and then push the branch out to
the remote.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

I would probably use SVN. It might become harder to make code changes or work
on new features in an environment where mulitple collaborators are making
active changes to the master repository. Other than that, it wouldn't be much
more difficult in my opinion.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

You would almost always want to make changes in a separate branch rather than
in master. In addition to isolating whatever work or changes you're
specifically targeting in your branch, and being able to worry about the
changing ground below in a master merge in the future, you are also keeping the
master branch clean, and helping keeping the source of truth for your project
stable. In a collaborative environment, protecting the master branch via pull
requests also helps ensure that the master stays stable and consistent.
